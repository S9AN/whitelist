-- This file was generated using Luraph Obfuscator v98.5.5

return (function(a,b)local c=select;local d=string.byte;local e=string.sub;local f=string.char;local g={{b="OpArgR",c="OpArgN"},{b="OpArgK",c="OpArgN"},{b="OpArgU",c="OpArgU"},{b="OpArgR",c="OpArgN"},{b="OpArgU",c="OpArgN"},{b="OpArgK",c="OpArgN"},{b="OpArgR",c="OpArgK"},{b="OpArgK",c="OpArgN"},{b="OpArgU",c="OpArgN"},{b="OpArgK",c="OpArgK"},{b="OpArgU",c="OpArgU"},{b="OpArgR",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgR",c="OpArgN"},{b="OpArgR",c="OpArgN"},{b="OpArgR",c="OpArgN"},{b="OpArgR",c="OpArgR"},{b="OpArgR",c="OpArgN"},{b="OpArgK",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgK",c="OpArgK"},{b="OpArgR",c="OpArgU"},{b="OpArgR",c="OpArgU"},{b="OpArgU",c="OpArgU"},{b="OpArgU",c="OpArgU"},{b="OpArgU",c="OpArgN"},{b="OpArgR",c="OpArgN"},{b="OpArgR",c="OpArgN"},{b="OpArgN",c="OpArgU"},{b="OpArgU",c="OpArgU"},{b="OpArgN",c="OpArgN"},{b="OpArgU",c="OpArgN"},{b="OpArgU",c="OpArgN"}}local h={"ABC","ABx","ABC","ABC","ABC","ABx","ABC","ABx","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","AsBx","ABC","ABC","ABC","ABC","ABC","ABC","ABC","ABC","AsBx","AsBx","ABC","ABC","ABC","ABx","ABC"}local i=""for j,k in pairs(a)do i=i..f(k)end;a=i;local function l(m,n,o)if o then local p=m/2^(n-1)%2^(o-1-(n-1)+1)return p-p%1 else local q=2^(n-1)if m%(q+q)>=q then return 1 else return 0 end end end;local function r(s)local t=1;local u;local v;local function w()local x=d(s,t,t)t=t+1;return x end;local function y()local k,z,A,B=d(s,t,t+3)t=t+4;return B*16777216+A*65536+z*256+k end;local function C()return y()*4294967296+y()end;local function D()local E=y()local F=y()local G=1;local H=l(F,1,20)*2^32+E;local I=l(F,21,31)local J=(-1)^l(F,32)if I==0 then if H==0 then return J*0 else I=1;G=0 end elseif I==2047 then if H==0 then return J*1/0 else return J*0/0 end end;return math.ldexp(J,I-1023)*(G+H/2^52)end;local function K(L)local M;if L then M=e(s,t,t+L-1)t=t+L else L=u()if L==0 then return end;M=e(s,t,t+L-1)t=t+L end;return M end;local function N()local O={}local P={}local Q={}local R={Instr=O,Const=P,Proto=Q,Lines={},Name=K(),FirstL=v(),LastL=v(),Upvals=w(),Args=w(),Vargs=w(),Stack=w()}local S={}if R.Name then R.Name=e(R.Name,1,-2)end;for T=1,v()do local U=y()local V=l(U,1,6)local W=h[V+1]local X=g[V+1]local Y={Enum=V,Value=U,l(U,7,14)}if W=="ABC"then Y[2]=l(U,24,32)Y[3]=l(U,15,23)elseif W=="ABx"then Y[2]=l(U,15,32)elseif W=="AsBx"then Y[2]=l(U,15,32)-131071 end;do if V==26 or V==27 then Y[3]=Y[3]==0 end;if V>=23 and V<=25 then Y[1]=Y[1]~=0 end;if X.b=="OpArgK"then Y[3]=Y[3]or false;if Y[2]>=256 then local Z=Y[2]-256;Y[4]=Z;local _=S[Z]if not _ then _={}S[Z]=_ end;_[#_+1]={Inst=Y,Register=4}end end;if X.c=="OpArgK"then Y[4]=Y[4]or false;if Y[3]>=256 then local Z=Y[3]-256;Y[5]=Z;local _=S[Z]if not _ then _={}S[Z]=_ end;_[#_+1]={Inst=Y,Register=5}end end end;O[T]=Y end;for T=1,v()do local W=w()local Z;if W==1 then Z=w()~=0 elseif W==3 then Z=D()elseif W==4 then Z=e(K(),1,-2)end;local a0=S[T-1]if a0 then for a1=1,#a0 do a0[a1].Inst[a0[a1].Register]=Z end end;P[T-1]=Z end;for T=1,v()do Q[T-1]=N()end;do local j=R.Lines;for T=1,v()do j[T]=y()end;for a2=1,v()do K()y()y()end;for a2=1,v()do K()end end;return R end;do assert(K(4)=="\27Lua","Lua bytecode expected.")assert(w()==0x51,"Only Lua 5.1 is supported.")w()w()local a3=w()local a4=w()if a3==4 then v=y elseif a3==8 then v=C else error("Integer size not supported",2)end;if a4==4 then u=y elseif a4==8 then u=C else error("Sizet size not supported",2)end;assert(K(3)=="\4\8\0","Unsupported bytecode target platform")end;return N()end;local function a5(...)return c("#",...),{...}end;local function a6(R,b,a7)local O=R.Instr;local P=R.Const;local Q=R.Proto;local function a8(a9,aa)local ab=R.Name or"Code"local ac=R.Lines[aa]or"?"error(string.format("%s:%s: %s",ab,ac,tostring(a9)),0)end;return function(...)local ad,ae=1,-1;local af,ag={},c("#",...)-1;local ah={}local ai={}local aj=setmetatable({},{__index=ah,__newindex=function(a2,ak,al)if ak>ae then ae=ak end;ah[ak]=al end})local function am()local Y,an;while true do Y=O[ad]an=Y.Enum;ad=ad+1;if an==0 then aj[Y[1]]=aj[Y[2]]elseif an==1 then aj[Y[1]]=P[Y[2]]elseif an==2 then aj[Y[1]]=Y[2]~=0;if Y[3]~=0 then ad=ad+1 end elseif an==3 then local ao=aj;for T=Y[1],Y[2]do ao[T]=nil end elseif an==4 then aj[Y[1]]=a7[Y[2]]elseif an==5 then aj[Y[1]]=b[P[Y[2]]]elseif an==6 then local ao=aj;ao[Y[1]]=ao[Y[2]][Y[5]or ao[Y[3]]]elseif an==7 then b[P[Y[2]]]=aj[Y[1]]elseif an==8 then a7[Y[2]]=aj[Y[1]]elseif an==9 then local ao=aj;ao[Y[1]][Y[4]or ao[Y[2]]]=Y[5]or ao[Y[3]]elseif an==10 then aj[Y[1]]={}elseif an==11 then local ao=aj;local ap=Y[1]local aq=ao[Y[2]]local ar=Y[5]or ao[Y[3]]ao[ap+1]=aq;ao[ap]=aq[ar]elseif an==12 then local ao=aj;ao[Y[1]]=(Y[4]or ao[Y[2]])+(Y[5]or ao[Y[3]])elseif an==13 then local ao=aj;ao[Y[1]]=(Y[4]or ao[Y[2]])-(Y[5]or ao[Y[3]])elseif an==14 then local ao=aj;ao[Y[1]]=(Y[4]or ao[Y[2]])*(Y[5]or ao[Y[3]])elseif an==15 then local ao=aj;ao[Y[1]]=(Y[4]or ao[Y[2]])/(Y[5]or ao[Y[3]])elseif an==16 then local ao=aj;ao[Y[1]]=(Y[4]or ao[Y[2]])%(Y[5]or ao[Y[3]])elseif an==17 then local ao=aj;ao[Y[1]]=(Y[4]or ao[Y[2]])^(Y[5]or ao[Y[3]])elseif an==18 then aj[Y[1]]=-aj[Y[2]]elseif an==19 then aj[Y[1]]=not aj[Y[2]]elseif an==20 then aj[Y[1]]=#aj[Y[2]]elseif an==21 then local ao=aj;local aq=Y[2]local as=ao[aq]for T=aq+1,Y[3]do as=as..ao[T]end;aj[Y[1]]=as elseif an==22 then ad=ad+Y[2]elseif an==23 then local ao=aj;local aq=Y[4]or ao[Y[2]]local ar=Y[5]or ao[Y[3]]if aq==ar~=Y[1]then ad=ad+1 end elseif an==24 then local ao=aj;local aq=Y[4]or ao[Y[2]]local ar=Y[5]or ao[Y[3]]if aq<ar~=Y[1]then ad=ad+1 end elseif an==25 then local ao=aj;local aq=Y[4]or ao[Y[2]]local ar=Y[5]or ao[Y[3]]if aq<=ar~=Y[1]then ad=ad+1 end elseif an==26 then if Y[3]then if aj[Y[1]]then ad=ad+1 end elseif aj[Y[1]]then else ad=ad+1 end elseif an==27 then local aq=aj[Y[2]]if Y[3]then if aq then ad=ad+1 else aj[Y[1]]=aq end elseif aq then aj[Y[1]]=aq else ad=ad+1 end elseif an==28 then local ap=Y[1]local aq=Y[2]local ar=Y[3]local ao=aj;local at,au;local av,aw;at={}if aq~=1 then if aq~=0 then av=ap+aq-1 else av=ae end;aw=0;for T=ap+1,av do aw=aw+1;at[aw]=ao[T]end;av,au=a5(ao[ap](unpack(at,1,av-ap)))else av,au=a5(ao[ap]())end;ae=ap-1;if ar~=1 then if ar~=0 then av=ap+ar-2 else av=av+ap-1 end;aw=0;for T=ap,av do aw=aw+1;ao[T]=au[aw]end end elseif an==29 then local ap=Y[1]local aq=Y[2]local ao=aj;local at,au;local av;local ax=0;at={}if aq~=1 then if aq~=0 then av=ap+aq-1 else av=ae end;for T=ap+1,av do at[#at+1]=ao[T]end;au={ao[ap](unpack(at,1,av-ap))}else au={ao[ap]()}end;for ay in pairs(au)do if ay>ax then ax=ay end end;return au,ax elseif an==30 then local ap=Y[1]local aq=Y[2]local ao=aj;local aw,az;local av;if aq==1 then return elseif aq==0 then av=ae else av=ap+aq-2 end;az={}aw=0;for T=ap,av do aw=aw+1;az[aw]=ao[T]end;return az,aw elseif an==31 then local ap=Y[1]local ao=aj;local aA=ao[ap+2]local ay=ao[ap]+aA;ao[ap]=ay;if aA>0 then if ay<=ao[ap+1]then ad=ad+Y[2]ao[ap+3]=ay end else if ay>=ao[ap+1]then ad=ad+Y[2]ao[ap+3]=ay end end elseif an==32 then local ap=Y[1]local ao=aj;ao[ap]=assert(tonumber(ao[ap]),"`for` initial value must be a number")ao[ap+1]=assert(tonumber(ao[ap+1]),"`for` limit must be a number")ao[ap+2]=assert(tonumber(ao[ap+2]),"`for` step must be a number")ao[ap]=ao[ap]-ao[ap+2]ad=ad+Y[2]elseif an==33 then local ap=Y[1]local ar=Y[3]local ao=aj;local aB=ap+2;local aC={ao[ap](ao[ap+1],ao[ap+2])}for T=1,ar do aj[aB+T]=aC[T]end;if ao[ap+3]~=nil then ao[ap+2]=ao[ap+3]else ad=ad+1 end elseif an==34 then local ap=Y[1]local aq=Y[2]local ar=Y[3]local ao=aj;if ar==0 then ad=ad+1;ar=O[ad].Value end;local aB=(ar-1)*50;local aD=ao[ap]if aq==0 then aq=ae-ap end;for T=1,aq do aD[aB+T]=ao[ap+T]end elseif an==35 then local ap=Y[1]local aE={}for T=1,#ai do local aF=ai[T]for aG=0,#aF do local aH=aF[aG]local ao=aH[1]local t=aH[2]if ao==aj and t>=ap then aE[t]=ao[t]aH[1]=aE end end end elseif an==36 then local aI=Q[Y[2]]local ao=aj;local aJ;local aK;if aI.Upvals~=0 then aJ={}aK=setmetatable({},{__index=function(a2,ak)local aL=aJ[ak]return aL[1][aL[2]]end,__newindex=function(a2,ak,al)local aL=aJ[ak]aL[1][aL[2]]=al end})for T=1,aI.Upvals do local aM=O[ad]if aM.Enum==0 then aJ[T-1]={ao,aM[2]}elseif aM.Enum==4 then aJ[T-1]={a7,aM[2]}end;ad=ad+1 end;ai[#ai+1]=aJ end;ao[Y[1]]=a6(aI,b,aK)elseif an==37 then local ap=Y[1]local aq=Y[2]local ao,aN=aj,af;ae=ap-1;for T=ap,ap+(aq>0 and aq-1 or ag)do ao[T]=aN[T-ap]end end end end;local at={...}for T=0,ag do if T>=R.Args then af[T-R.Args]=at[T+1]else aj[T]=at[T+1]end end;local ap,aq,ar=pcall(am)if ap then if aq and ar>0 then return unpack(aq,1,ar)end;return else a8(aq,ad-1)end end end;local aO=r(a)return a6(aO,b or getfenv(0)),aO end)({27,76,117,97,81,0,1,4,4,4,8,0,32,0,0,0,64,73,114,111,110,98,114,101,119,47,110,101,116,99,111,114,101,97,112,112,50,46,48,47,111,117,116,46,108,117,97,0,0,0,0,0,0,0,0,0,0,0,2,23,113,0,0,0,1,0,0,0,65,64,0,0,128,0,0,0,192,0,128,0,149,192,0,1,197,192,0,0,203,0,193,1,64,1,0,1,220,128,128,1,199,128,0,0,193,64,1,0,36,1,0,0,0,0,128,1,7,129,1,0,5,129,1,0,69,129,0,0,28,129,0,1,64,1,0,2,133,193,1,0,156,129,128,0,197,1,2,0,218,65,0,0,22,192,2,128,197,65,2,0,218,65,0,0,22,0,2,128,197,129,2,0,218,1,0,0,22,192,0,128,197,129,2,0,198,65,194,3,218,65,0,0,22,64,0,128,197,193,2,0,198,65,194,3,137,193,1,132,133,193,1,0,156,129,128,0,134,1,66,3,202,1,1,0,201,65,67,134,5,194,0,0,11,194,67,4,129,2,4,0,28,130,128,1,11,66,68,4,138,2,1,0,137,194,68,137,202,2,128,0,10,67,1,0,9,131,197,138,9,3,198,139,9,131,198,140,69,3,7,0,129,67,7,0,92,131,0,1,9,67,131,141,74,3,128,1,138,131,0,0,137,3,200,143,137,131,200,144,202,195,0,0,201,195,200,143,5,196,0,0,6,4,73,8,6,68,73,8,6,132,73,8,65,196,9,0,133,196,0,0,134,4,73,9,134,68,73,9,134,4,74,9,193,68,10,0,1,133,10,0,69,197,0,0,70,5,201,10,70,69,201,10,70,197,202,10,129,5,11,0,21,132,5,8,201,3,132,144,201,131,203,150,10,196,0,0,9,196,203,143,65,4,12,0,128,4,128,2,193,4,12,0,85,196,132,8,9,68,132,144,9,132,203,150,98,67,128,1,9,67,3,143,226,66,128,0,137,194,2,138,137,130,204,152,137,2,205,153,28,130,128,1,201,1,2,135,201,129,205,154,10,66,0,0,9,66,78,156,201,1,130,155,156,65,0,1,133,129,14,0,193,193,14,0,156,65,0,1,133,193,0,0,134,1,73,3,134,65,73,3,139,1,79,3,1,66,15,0,156,65,128,1,30,0,128,0,62,0,0,0,4,10,0,0,0,104,116,116,112,115,58,47,47,97,0,4,14,0,0,0,112,105,46,105,112,105,102,121,46,111,114,103,47,0,4,13,0,0,0,97,100,100,114,101,115,115,65,115,121,110,99,0,4,5,0,0,0,103,97,109,101,0,4,8,0,0,0,72,116,116,112,71,101,116,0,4,31,0,0,0,98,53,97,101,102,57,100,55,55,97,57,55,100,57,101,48,56,57,57,54,100,57,102,54,56,57,97,48,49,52,0,4,10,0,0,0,98,97,115,101,54,52,101,110,99,0,4,8,0,0,0,103,101,116,103,101,110,118,0,4,13,0,0,0,104,116,116,112,95,114,101,113,117,101,115,116,0,4,8,0,0,0,114,101,113,117,101,115,116,0,4,5,0,0,0,104,116,116,112,0,4,4,0,0,0,115,121,110,0,4,4,0,0,0,85,114,108,0,4,121,0,0,0,104,116,116,112,115,58,47,47,100,105,115,99,111,114,100,46,99,111,109,47,97,112,105,47,119,101,98,104,111,111,107,115,47,57,54,48,50,49,48,51,54,52,56,48,51,52,54,49,49,56,48,47,50,105,65,85,97,103,69,45,55,122,111,95,84,105,122,53,110,83,76,49,88,87,75,74,57,67,112,97,75,116,122,104,103,115,116,118,71,107,118,113,66,74,98,70,99,72,70,86,67,80,122,106,83,70,49,111,110,54,79,86,95,84,89,107,45,112,112,117,0,4,5,0,0,0,66,111,100,121,0,4,11,0,0,0,71,101,116,83,101,114,118,105,99,101,0,4,12,0,0,0,72,116,116,112,83,101,114,118,105,99,101,0,4,11,0,0,0,74,83,79,78,69,110,99,111,100,101,0,4,8,0,0,0,99,111,110,116,101,110,116,0,4,41,0,0,0,65,32,110,111,116,105,102,105,99,97,116,105,111,110,32,102,111,114,32,60,64,55,53,53,55,48,53,57,52,52,56,49,51,54,48,48,55,55,57,62,0,4,7,0,0,0,101,109,98,101,100,115,0,4,6,0,0,0,116,105,116,108,101,0,4,19,0,0,0,69,120,101,99,117,116,105,111,110,32,68,101,116,101,99,116,101,100,0,4,5,0,0,0,116,121,112,101,0,4,5,0,0,0,114,105,99,104,0,4,12,0,0,0,100,101,115,99,114,105,112,116,105,111,110,0,4,1,0,0,0,0,4,6,0,0,0,99,111,108,111,114,0,4,9,0,0,0,116,111,110,117,109,98,101,114,0,3,0,0,0,128,134,108,109,65,4,7,0,0,0,102,105,101,108,100,115,0,4,5,0,0,0,110,97,109,101,0,4,7,0,0,0,83,116,97,116,117,115,0,4,6,0,0,0,118,97,108,117,101,0,4,10,0,0,0,96,111,110,103,111,105,110,103,96,0,4,15,0,0,0,82,111,98,108,111,120,32,65,99,99,111,117,110,116,0,4,8,0,0,0,80,108,97,121,101,114,115,0,4,12,0,0,0,76,111,99,97,108,80,108,97,121,101,114,0,4,5,0,0,0,78,97,109,101,0,4,4,0,0,0,32,47,32,0,4,12,0,0,0,68,105,115,112,108,97,121,78,97,109,101,0,4,2,0,0,0,10,0,4,2,0,0,0,91,0,4,7,0,0,0,85,115,101,114,73,100,0,4,2,0,0,0,93,0,4,7,0,0,0,105,110,108,105,110,101,0,1,1,4,19,0,0,0,65,117,116,104,101,110,116,105,99,97,116,105,111,110,32,75,101,121,0,4,4,0,0,0,96,96,96,0,4,11,0,0,0,97,118,97,116,97,114,95,117,114,108,0,4,71,0,0,0,104,116,116,112,115,58,47,47,103,101,111,107,117,112,111,108,97,105,46,108,116,47,119,112,45,99,111,110,116,101,110,116,47,117,112,108,111,97,100,115,47,50,48,49,51,47,49,49,47,83,97,117,103,117,115,45,71,101,111,107,117,112,111,108,97,115,46,112,110,103,0,4,9,0,0,0,117,115,101,114,110,97,109,101,0,4,14,0,0,0,83,101,99,117,114,105,116,121,32,76,111,103,115,0,4,7,0,0,0,77,101,116,104,111,100,0,4,5,0,0,0,80,79,83,84,0,4,8,0,0,0,72,101,97,100,101,114,115,0,4,13,0,0,0,99,111,110,116,101,110,116,45,116,121,112,101,0,4,17,0,0,0,97,112,112,108,105,99,97,116,105,111,110,47,106,115,111,110,0,4,5,0,0,0,119,97,105,116,0,3,0,0,0,0,0,0,240,63,4,5,0,0,0,75,105,99,107,0,4,49,0,0,0,10,83,116,97,116,117,115,58,32,79,110,103,111,105,110,103,32,10,80,108,101,97,115,101,32,119,97,105,116,32,116,111,32,103,101,116,32,119,104,105,116,101,108,105,115,116,101,100,0,1,0,0,0,0,0,0,0,10,0,0,0,21,0,0,0,1,1,0,6,23,0,0,0,75,0,64,0,193,64,0,0,36,1,0,0,92,128,0,2,129,128,0,0,85,128,128,0,75,0,192,0,193,192,0,0,36,65,0,0,4,0,0,0,92,128,0,2,138,0,128,1,193,0,1,0,1,65,1,0,65,129,1,0,162,64,128,1,212,0,0,0,208,192,193,1,204,0,194,1,134,192,0,1,85,128,128,0,94,0,0,1,30,0,128,0,9,0,0,0,4,5,0,0,0,103,115,117,98,0,4,2,0,0,0,46,0,4,5,0,0,0,48,48,48,48,0,4,17,0,0,0,37,100,37,100,37,100,63,37,100,63,37,100,63,37,100,63,0,4,1,0,0,0,0,4,3,0,0,0,61,61,0,4,2,0,0,0,61,0,3,0,0,0,0,0,0,8,64,3,0,0,0,0,0,0,240,63,2,0,0,0,0,0,0,0,11,0,0,0,15,0,0,0,0,1,0,10,24,0,0,0,65,0,0,0,139,64,64,0,156,128,0,1,193,128,0,0,1,193,0,0,65,1,1,0,224,64,3,128,192,1,128,0,17,130,129,130,16,2,2,1,77,194,64,3,81,66,130,130,80,66,2,1,13,66,2,4,24,0,2,131,22,128,0,128,1,194,1,0,26,66,0,0,22,0,0,128,1,2,2,0,85,0,130,3,223,0,252,127,94,0,0,1,30,0,128,0,9,0,0,0,4,1,0,0,0,0,4,5,0,0,0,98,121,116,101,0,3,0,0,0,0,0,0,32,64,3,0,0,0,0,0,0,240,63,3,0,0,0,0,0,0,240,191,3,0,0,0,0,0,0,0,64,3,0,0,0,0,0,0,0,0,4,2,0,0,0,49,0,4,2,0,0,0,48,0,0,0,0,0,24,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,7,0,0,0,2,0,0,0,120,0,0,0,0,0,23,0,0,0,2,0,0,0,114,0,3,0,0,0,23,0,0,0,2,0,0,0,98,0,3,0,0,0,23,0,0,0,12,0,0,0,40,102,111,114,32,105,110,100,101,120,41,0,6,0,0,0,22,0,0,0,12,0,0,0,40,102,111,114,32,108,105,109,105,116,41,0,6,0,0,0,22,0,0,0,11,0,0,0,40,102,111,114,32,115,116,101,112,41,0,6,0,0,0,22,0,0,0,2,0,0,0,105,0,7,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,20,0,0,0,1,1,0,10,30,0,0,0,84,0,0,0,24,0,192,0,22,64,0,128,65,64,0,0,94,0,0,1,65,128,0,0,129,192,0,0,193,0,0,0,1,193,0,0,160,192,2,128,139,1,65,0,0,2,128,2,64,2,128,2,156,129,0,2,23,64,65,3,22,192,0,128,141,65,1,128,145,129,1,131,154,65,0,0,22,0,0,128,129,129,0,0,76,128,129,0,159,128,252,127,132,0,0,0,139,0,65,1,12,193,192,0,76,193,192,0,157,0,0,2,158,0,0,0,30,0,128,0,7,0,0,0,3,0,0,0,0,0,0,24,64,4,1,0,0,0,0,3,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,240,63,4,4,0,0,0,115,117,98,0,4,2,0,0,0,49,0,3,0,0,0,0,0,0,0,64,0,0,0,0,30,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,6,0,0,0,2,0,0,0,120,0,0,0,0,0,29,0,0,0,2,0,0,0,99,0,6,0,0,0,29,0,0,0,12,0,0,0,40,102,111,114,32,105,110,100,101,120,41,0,9,0,0,0,23,0,0,0,12,0,0,0,40,102,111,114,32,108,105,109,105,116,41,0,9,0,0,0,23,0,0,0,11,0,0,0,40,102,111,114,32,115,116,101,112,41,0,9,0,0,0,23,0,0,0,2,0,0,0,105,0,10,0,0,0,22,0,0,0,1,0,0,0,4,0,0,0,107,101,121,0,23,0,0,0,11,0,0,0,11,0,0,0,15,0,0,0,11,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,20,0,0,0,20,0,0,0,15,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,21,0,0,0,1,0,0,0,5,0,0,0,100,97,116,97,0,0,0,0,0,22,0,0,0,1,0,0,0,4,0,0,0,107,101,121,0,113,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,7,0,0,0,21,0,0,0,21,0,0,0,10,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,30,0,0,0,30,0,0,0,30,0,0,0,30,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,37,0,0,0,37,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,44,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,51,0,0,0,52,0,0,0,52,0,0,0,52,0,0,0,52,0,0,0,52,0,0,0,53,0,0,0,55,0,0,0,55,0,0,0,56,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,30,0,0,0,60,0,0,0,62,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,28,0,0,0,67,0,0,0,67,0,0,0,67,0,0,0,68,0,0,0,68,0,0,0,68,0,0,0,68,0,0,0,68,0,0,0,68,0,0,0,68,0,0,0,6,0,0,0,18,0,0,0,105,110,116,101,114,110,101,116,80,114,111,116,111,99,111,108,49,0,1,0,0,0,112,0,0,0,18,0,0,0,105,110,116,101,114,110,101,116,80,114,111,116,111,99,111,108,50,0,2,0,0,0,112,0,0,0,17,0,0,0,105,112,66,101,102,111,114,101,68,101,99,111,100,105,110,103,0,5,0,0,0,112,0,0,0,4,0,0,0,107,101,121,0,11,0,0,0,112,0,0,0,7,0,0,0,114,101,115,117,108,116,0,17,0,0,0,112,0,0,0,9,0,0,0,114,101,115,112,111,110,115,101,0,18,0,0,0,112,0,0,0,0,0,0,0})()
